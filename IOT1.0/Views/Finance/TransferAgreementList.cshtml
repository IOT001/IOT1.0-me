@using DataProvider.Models
@using DataProvider.Paging
@{
    ViewBag.Title = "转让协议管理"; 
    object SYS_Role = ViewData["SYS_Role"];
}
@model TransferListViewModel
@section styles{
    <style type="text/css">
    </style>
}
<div class="wrapper wrapper-content  animated fadeInRight">
    <div class="row">
        <div class="col-sm-12">
            <div class="ibox float-e-margins">
                <!-- 数据显示区 -->
                <div class="ibox-content">
                    <!-- 功能操作区 -->
                    @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "frmQuery", @class = "form-horizontal form-horizontal" }))
                    {

                        <div class="form-group">


                            <div class="col-sm-2">
                                <label class="control-label">甲方学员:</label>
                            </div>
                            <div class="col-sm-3">

    @Html.TextBoxFor(t => t.search.JName, new { @class = "form-control input-sm", @type = "text", @placeholder = "请输入甲方学员" }) 

                            </div> 

                             
                                   <div class="col-sm-2">
                                <label class="control-label">乙方学员:</label>
                            </div>
                            <div class="col-sm-3">

                               @Html.TextBoxFor(t => t.search.YName, new { @class = "form-control input-sm", @type = "text", @placeholder = "请输入乙方学员" })  

                            </div>

                        </div>



                        <div class="form-group">
                               <div class="col-xs-2">
                                <label class="control-label">创建时间:</label>
                            </div>

                            <div class="col-sm-3">
                                <div class="input-daterange input-group" id="datepicker">
                                    @Html.TextBoxFor(t => t.search.CreateTime_start, new { @class = "input-sm form-control", @type = "text", @value = DateTime.Now })

                                    <span class="input-group-addon">到</span>

                                    @Html.TextBoxFor(t => t.search.CreateTime_end, new { @class = "input-sm form-control", @type = "text", @value = DateTime.Now })

                                </div>
                            </div>



                                     <div class="col-sm-2">
                                <label class="control-label">审核状态:</label>
                            </div>
                            <div class="col-sm-3">
                             
                                @Html.DropDownListFor(t => t.search.StateID, Model.StateIDIL, new { @class = "form-control input-sm chosen-select", @style = "width:100%;height:100%;", @tabindex = "4" })
                         

                            </div>

                        </div>




                        <div class="form-group">
                            <div class="col-sm-4">
                                <div class="btn-group">
                                    <button class="btn btn-primary btn-sm" type="button" onclick="javascript:modify();"><i class="fa fa-plus-square"></i> 新增</button>
                                </div>
                            </div>
                            <div class="col-sm-8 project-actions">
                                <button type="submit" id="submit" class="btn btn-w-m btn-primary btn-sm">查&nbsp;&nbsp;&nbsp;&nbsp;询</button>
                            </div>
                        </div>
                    }
                    <!-- 数据列表 -->
                    <table class="table table-striped table-bordered table-hover dataTables-example">
                        <thead>
                            <tr>
                                <th>系统ID</th>
                                <th>甲方</th>
                                <th>乙方</th>
                                <th>转让课程</th>
                                <th>转让课时</th> 
                                <th>转至课程</th>
                                <th>折扣课时</th> 
                                <th>创建时间</th>
                                <th>状态</th>
                                <th>操作</th>
                            </tr>
                        </thead>
                        <!-- 循环数据 -->
                        <tbody>

                            @if (Model != null && Model.Transferlist.Count() > 0)
                            {
                                foreach (var m in Model.Transferlist)
                                {
                                    <tr>
                                        <td class="jz">@m.ID</td>
                                        <td>@m.JStudentIDName</td>
                                        <td>@m.YStudentIDName</td> 
                                        <td>@m.JClassName</td> 
                                        <td>@m.JClassHour</td>
                                        <td>@m.TranCourse</td>
                                        <td>@m.TranHour</td>
                                        <td>@m.CreateTime</td>
                                        <td>@m.StateIDName</td>
                                        <td>
                                            <a href="javascript:modify('@m.ID','@m.StateID');" class="btn btn-primary btn-xs" type="button"><i class="fa fa-edit"></i> 编辑</a>

                                           <a href="@Url.Action("TransferProtocol", "Finance", new { id = m.ID, typeid = 2 })" class="btn btn-primary btn-xs" target="_blank"> <i class="fa fa-edit"></i>协议</a>

                                            @if (!string.IsNullOrEmpty(SYS_Role.ToString()) && m.StateID == 1)
                                            {
                                                if (SYS_Role == "1")
                                                {
                                                    <a href="javascript:TransferAudit('@m.ID');" class="btn btn-primary btn-xs" type="button"><i class="fa fa-edit"></i> 审核</a>
                                                }
                                            }

                                        </td>
                                    </tr>
                                }
                            }
                            else
                            {
                                <tr><td colspan="11" style="text-align:center; color:red;">未查询到数据,请更换查询条件试试!</td></tr>
                            }
                        </tbody>

                    </table>
                    @if (Model != null && Model.Transferlist.TotalPageCount > 0)
                    {
                        <div class="row">
                            <div class="dataTables_info col-sm-6">每页显示 @Model.search.PageSize 条，共<span>@Model.Transferlist.TotalItemCount</span>条数据</div>
                            <div class="col-sm-6">

                                @Html.Pager(Model.Transferlist, new PagerOptions(), "", new RouteValueDictionary {
                                   { "pageindex",  Model.search.CurrentPage },
                                   { "pagesize", ViewBag.PageSize }
                               }, null)
                            </div>

                        </div>
                    }
                </div>
            </div>
        </div>

    </div>
</div>


@*弹出层，新增转让记录*@
<div class="ibox float-e-margins" id="Transfer" style="display:none">
    <div class="ibox-content">
        <form class="form-horizontal">
            @*----甲方--*@
            <div class="form-group">
                <label class="col-sm-2 control-label">甲方：</label>
                <div class="col-sm-4">
                     <input type="text" placeholder="甲方" class="form-control" id="JName">
                </div>
                <label class="col-sm-2 control-label">甲方身份证：</label>
                <div class="col-sm-4">
                      <input type="text" placeholder="甲方身份证" class="form-control" id="JIDCode">
                </div>
            </div>

            <div class="form-group">
                <label class="col-sm-2 control-label">甲方地址：</label>
                <div class="col-sm-4">
                      <input type="text" placeholder="甲方地址" class="form-control" id="JAddress">
                </div>
                <label class="col-sm-2 control-label">甲方联系方式：</label>
                <div class="col-sm-4">
                      <input type="text" placeholder="甲方联系方式" class="form-control" id="JLinkType">
                </div>
            </div>

            <div class="form-group">
                <label class="col-sm-2 control-label">转让学员：</label>
                <div class="col-sm-4"> 
                                @Html.DropDownListFor(t => t.search.JStudentID, Model.StudentsIDIL, new { @class = "form-control input-sm chosen-select", @style = "width:100%;height:100%;", @tabindex = "4",@id = "JStudentID" })
                </div>
                <label class="col-sm-2 control-label">所报班级：</label>
                <div class="col-sm-4">
        

                    <select data-placeholder="请选择所报班级..." id = "JClassName"   class="discountSelect form-control input-sm" style="width:100%;height:100%;" ><option value="">请选择</option></select>

                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-2 control-label">剩余课时：</label>
                <div class="col-sm-4">
                      <input type="text" placeholder="甲方" class="form-control" id="JClassHour">
                </div>
                <label class="col-sm-2 control-label">剩余价格：</label>
                <div class="col-sm-4">
                      <input type="text" placeholder="甲方" class="form-control" id="JClassHourPrice">
                </div>
            </div>
            @*----乙方--*@
            <div class="form-group">
                <label class="col-sm-2 control-label">乙方：</label>
                <div class="col-sm-4">
                      <input type="text" placeholder="乙方" class="form-control" id="YName">
                </div>
                <label class="col-sm-2 control-label">乙方身份证：</label>
                <div class="col-sm-4">
                      <input type="text" placeholder="乙方身份证" class="form-control" id="YIDCode">
                </div>
            </div>

            <div class="form-group">
                <label class="col-sm-2 control-label">乙方地址：</label>
                <div class="col-sm-4">
                      <input type="text" placeholder="乙方地址" class="form-control" id="YAddress">
                </div>
                <label class="col-sm-2 control-label">乙方联系方式：</label>
                <div class="col-sm-4">
                      <input type="text" placeholder="乙方联系方式" class="form-control" id="YLinkType">
                </div>
            </div>

            <div class="form-group">
                <label class="col-sm-2 control-label">接受学员：</label>
                <div class="col-sm-4">
                        @Html.DropDownListFor(t => t.search.YStudentID, Model.StudentsIDIL_1, new { @class = "form-control input-sm chosen-select", @style = "width:100%;height:100%;", @tabindex = "4",@id = "YStudentID" })


                    

                </div>
                <label class="col-sm-2 control-label">转至班级：</label>
                <div class="col-sm-4">
                    
                    <select data-placeholder="请选择所报班级..." id = "YClassid"   class="discountSelect form-control input-sm" style="width:100%;height:100%;" ><option value="">请选择</option></select>
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-2 control-label">折合课时：</label>
                <div class="col-sm-4">
                      <input type="text" placeholder="甲方" class="form-control" id="TranHour">
                </div>
                <label class="col-sm-2 control-label">折合价格：</label>
                <div class="col-sm-4">
                      <input type="text" placeholder="甲方" class="form-control" id="TranPrice">
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-2 control-label">转款天数：</label>
                <div class="col-sm-4">
                      <input type="text" placeholder="甲方" class="form-control" id="TranDays">
                </div>

            </div>
        </form>
    </div>
</div>
<script type="text/javascript">
    //新增或编辑
    function modify(id, StateID) {
        if (StateID==2) {
            layer.msg("已审核的不能修改！");
            return false;
        }
        cleanData("Transfer");//清空数据
        layer.open({
            type: 1,
            title: "<h3 class='ibox-title'>转让</h3>",
            area: ['800px', '600px'],
            content: $('#Transfer'),
            btn: ['保存', '取消'],
            yes: function () {
                save(id);
            },
            cancel: function (index) {
                layer.close(index);
            }
        });

        if (id) {//提供存着ID就是修改，则加载数据，不然打开空页面
            var loadindex = layer.load();
            loaddetail(id, loadindex)
        }

    }

     

 
      $("#JStudentID").change(function () {
          JstudentChage();

        });
      //改甲方学员时触发事件 
      function JstudentChage(bandid) {
          var JStudentID = $("#JStudentID").val();
          $("#JClassName option").remove(); //清空绑定的数据，因为不清空就会把之前绑定的一样存在
          $("#JClassName").append("<option value=''>-请选择-</option>");//添加初始值

          //调用后台查询
          $.post('@Url.Action("Getvw_EnrollList", "Finance")', { JStudentID: JStudentID }, function (json) {
  

              for (var i = 0; i < json.length; i++) {
                  if (json[i].ID == bandid)//说明选中
                  {
                      $("#JClassName").append("<option selected='selected' data-ClassHour = '" + json[i].ClassHour + "' data-UsedHour = '" + json[i].UsedHour + "' value='" + json[i].ID + "' data-JClassName='" + json[i].Name + "' >" + json[i].Name + "</option>");
                  }
                  else {
                      $("#JClassName").append("<option  data-ClassHour = '" + json[i].ClassHour + "' data-UsedHour = '" + json[i].UsedHour + "' value='" + json[i].ID + "' data-JClassName='" + json[i].Name + "' >" + json[i].Name + "</option>");
                  }
              }
          }, 'json').error(function () { alter("ERRPR!") });



         
      }

    $("#YStudentID").change(function () {
        var YStudentID = $("#YStudentID").val();
        $("#YClassid option").remove();  //清空绑定的数据，因为不清空就会把之前绑定的一样存在

        //调用后台查询
        $.post('@Url.Action("GetClasses", "Finance")', { YStudentID: YStudentID }, function (json) {
                

                for (var i = 0; i < json.length; i++) {
                    $("#YClassid").append("<option  value='" + json[i].id + "' data-TranCourse='" + json[i].name + "'>" + json[i].name + "</option>");
                }
            }, 'json').error(function () { alter("ERRPR!") });


        });



    $("#JClassName").change(function () {

        var ClassHour = $("#JClassName option:selected").data("classhour");
        var UsedHour = $("#JClassName option:selected").data("usedhour");
        $("#JClassHour").val(ClassHour - UsedHour);

    });









    function loaddetail(id, loadindex) {
        $.ajax({
            url: '@Url.Action("GetTransfer", "Finance")',
            type: "post",
            data: { id: id },
            success: function (json) {
                if (json.status == 200) {//成功
                     

                    $("#JName").val(json.data.JName);
                    $("#JIDCode").val(json.data.JIDCode);
                    $("#JAddress").val(json.data.JAddress);
                    $("#JLinkType").val(json.data.JLinkType);
                    $("#JStudentID").val(json.data.JStudentID);
                    JstudentChage(json.data.JENID);//触发change事件
                    $("#JClassHour").val(json.data.JClassHour);
                    $("#JClassHourPrice").val(json.data.JClassHourPrice);



                    $("#YName").val(json.data.YName);
                    $("#YIDCode").val(json.data.YIDCode);
                    $("#YAddress").val(json.data.YAddress);
                    $("#YLinkType").val(json.data.YLinkType);
                    $("#YStudentID").val(json.data.YStudentID);
                    $("#YClassid").val(json.data.YClassid);
                    $("#TranPrice").val(json.data.TranPrice);
                    $("#TranHour").val(json.data.TranHour);
                    $("#TranDays").val(json.data.TranDays);

                    
                    layer.close(loadindex);//关闭加载层
                }
            },
            error: function (xmLHttpRequest, textStatus, errorThrown) {
                layer.msg("系统异常，请重试<br/>错误信息：" + xmLHttpRequest.responseText);
            }
        });
    }

    //保存或者新增
    function save(id) {

        var obj = new Object;
        if (id) {//有ID就是修改模式，没有就是新增模式
            obj.ID = id;
        }
        obj.JName = $("#JName").val().trim();
        

        obj.JIDCode = $("#JIDCode").val().trim();
        obj.JAddress = $("#JAddress").val().trim();

        obj.JLinkType = $("#JLinkType").val().trim();
        
 

        obj.JStudentID = $("#JStudentID").val().trim();
        obj.JENID = $("#JClassName").val().trim();
        
        obj.JClassHour = $("#JClassHour").val().trim();
        if (isNaN(obj.JClassHour)) {
            layer.msg("剩余课时必须是数字！");
            return false;
        }
        obj.JClassHourPrice = $("#JClassHourPrice").val().trim();
        if (isNaN(obj.JClassHourPrice)) {
            layer.msg("剩余价格必须是数字！");
            return false;
        }
        obj.YName = $("#YName").val().trim();
        obj.YIDCode = $("#YIDCode").val().trim();
        obj.YAddress = $("#YAddress").val().trim();
        obj.YLinkType = $("#YLinkType").val().trim();
        obj.YStudentID = $("#YStudentID").val().trim();
        obj.YClassid = $("#YClassid").val().trim();
        obj.TranPrice = $("#TranPrice").val().trim();
        if (isNaN(obj.TranPrice)) {
            layer.msg("折合课时必须是数字！");
            return false;
        }
        obj.TranHour = $("#TranHour").val().trim();
        if (isNaN(obj.TranHour)) {
            layer.msg("折合价格必须是数字！");
            return false;
        }
        obj.TranDays = $("#TranDays").val().trim();
        
        if (isNaN(obj.TranDays)) {
            layer.msg("转款天数必须是数字！");
            return false;
        } 
        var UsedHour = $("#JClassName option:selected").data("usedhour");
        obj.JClassName = $("#JClassName option:selected").data("jclassname");//甲方的课程名称

        obj.TranCourse = $("#YClassid option:selected").data("trancourse");//折合课程
      

        var action = '';
        if (id) {//有ID就是修改模式，没有就是新增模式
            action = '@Url.Action("SaveTransfer", "Finance")';
        }
        else { action = '@Url.Action("AddTransfer", "Finance")' }
        $.post(action, {
            "data": JSON.stringify(obj)//序列化对象
        }, function (json) {
            if (json.status == 200) {//成功

                layer.msg(json.msg);//弹出服务器返回的消息
                setTimeout(function () {//操作
                    layer.closeAll();//关闭所有层
                    window.location.reload(); //刷新
                }, 3000);
            }
        }, 'json');
    }



     



    function exportForm() {
        var $frm = $('#exportform');
        var array = $('#frmQuery').serializeArray();

        for (i = 0, length = array.length; i < length; i++) {
            key = array[i].name;
            value = array[i].value;
            $frm.append($('<input name = "' + key + '" value = "' + value + '"  style="display:none"/>'));
        }

        $frm.submit();
    }
    //审核
    function TransferAudit(tfid) {

        if (!tfid) {
            layer.msg("请选择需要审核的记录！");
            return false;
        }
        layer.confirm('是否已仔细核对过信息，确认审核此记录，一但审核，课时及时生效?', { icon: 3, title: '提示' }, function (index) {
            var action = '@Url.Action("TransferAudit", "Enroll")';
            $.post(action, {
                "tfid": tfid//转移记录ID
            }, function (json) {
                if (json.status == 200) {//成功

                    layer.msg(json.msg);//弹出服务器返回的消息
                    setTimeout(function () {//操作
                        layer.closeAll();//关闭所有层
                        window.location.reload(); //刷新
                    }, 3000);
                }
                else {
                    layer.msg(json.msg);//弹出服务器返回的消息
                }
            }, 'json');
        });

    }
 

</script>