@using DataProvider.Models
@using DataProvider.Paging
@{
    ViewBag.Title = "学员考勤";
}
@model AttendanceListViewModel
<style>
    .layui-layer-page .layui-layer-content {
        overflow:visible
    }
    .table {
        margin-bottom:0px;
    }

</style>
<div class="wrapper wrapper-content  animated fadeInRight">
    <div class="row">
        <div class="col-sm-12">
            <div class="ibox float-e-margins">
                <!-- 数据显示区 -->
                <div class="ibox-content">
                    <!-- 功能操作区 -->
                    @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "frmQuery", @class = "form-horizontal form-horizontal" }))
                    {
                       
                        
                        <div class="form-group">
                            <div class="col-sm-2">
                                <label class="control-label">班级名称:</label>
                            </div>

                            <div class="col-sm-3">
                                @Html.TextBoxFor(t => t.search.className, new { @class = "form-control input-sm", @type = "text", @placeholder = "班级名称" })
                            </div>
                            <div class="col-sm-2">
                                <label class="control-label">上课时间:</label>
                            </div>
                            <div class="col-sm-3">
                                <div class="input-daterange input-group" id="datepicker">
                                    @Html.TextBoxFor(t => t.search.timeStart, new { @class = "form-control input-sm", @type = "text", @name = "start" })
                                    <span class="input-group-addon">到</span>
                                    @Html.TextBoxFor(t => t.search.timeEnd, new { @class = "form-control input-sm", @type = "text", @name = "end" })
                                </div>

                            </div> 
                        </div>

                      <div class="form-group">
                                <div class="col-sm-2">
                                <label class="control-label">所属分校：</label>
                            </div>

                            <div class="col-sm-3">
                                @Html.DropDownListFor(t => t.search.ComCode,Model.search.ComCodeIL, new { @class = "input-sm form-control" ,@style = "width:100%;height:100%;", @tabindex = "4 "})
                            </div>
                        </div>
                                   
                        <div class="form-group">
                            <div class="col-sm-11 project-actions">
                                <button type="button" class="btn btn-w-m btn-primary btn-sm" onclick="javascript:fresh();">查&nbsp;&nbsp;&nbsp;&nbsp;询</button>
                            </div>
                        </div>
                    }
                    <!-- 数据列表 -->
                    <table class="table table-striped table-bordered table-hover dataTables-example">
                        <thead>
                            <tr>
                                <th rowspan="2">班级名称</th>
                                 <th rowspan="2">所属分校</th> 
                                <th rowspan="2">上课时间</th>
                                <th rowspan="2">星期</th>
                                <th rowspan="2">时段</th>
                                <th rowspan="2">教室</th>
                                <th rowspan="2">老师</th>
                                <th colspan="4" scope="col">学员人数</th>
                                <th rowspan="2">操作</th>
                            </tr>
                            <tr>
                                <th>应到人数</th> 
                                <th>已到人数</th>
                                <th>未到人数</th> 
                                <th>已评价</th> 
                            </tr>
                        </thead>
                        <!-- 循环数据 -->
                        <tbody>
                  
                            <!-- 测试数据 -->
                            @if (Model != null && Model.buttonlist.Count() > 0)
                            {
                                foreach (var m in Model.buttonlist)
                                {
                                    <tr>
                                        <td class="jz">@m.ClassName</td>
                                          <td>@m.CompName</td>
                                        <td>@DateTime.Parse(m.ClassDate + "").ToString("yyyy-MM-dd")</td> @*按钮名称*@
                                        <td>@System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat.GetDayName(DateTime.Parse(m.ClassDate + "").DayOfWeek)</td>
                                        <td>@m.TimePeriodValue</td>
                                        <td>@m.RoomName</td>
                                        <td>@m.TeacherName</td>
                                        <td>@m.SumStudents</td>
                                        <td>@m.CheckINStudents</td>
                                        <td>@m.UnCheckStudents</td>
                                        <td>@m.EvaluateStudents</td>
                                        <td>
                                            <a href="javascript:" class="btn btn-primary btn-xs" type="button" onclick="javascript:attendance('@Newtonsoft.Json.JsonConvert.SerializeObject(m)');"><i class="fa fa-edit"></i> 考勤</a>
                                                             
                                            <div class="btn-group">
                                                <button data-toggle="dropdown" class="btn btn-primary btn-xs dropdown-toggle" aria-expanded="false">
                                                    其他 <span class="caret"></span>
                                                </button>
                                                <ul class="dropdown-menu">
                                                    <li>
                                                        <a href="javascript:" class="" type="button" onclick="javascript: appraise('@Newtonsoft.Json.JsonConvert.SerializeObject(m)');"><i class="fa fa-edit"></i> 评价</a>
                                                    </li>
                                                    <li>
                                                        <a href="javascript:" class="" type="button" onclick="javascript: publishJob('@Newtonsoft.Json.JsonConvert.SerializeObject(m)','@m.ClassID','@m.ClassIndex');"><i class="fa fa-edit"></i> 作业</a>
                                                    </li>
                                                    <li>
                                                        <a href="javascript:" class="" type="button" onclick="javascript: modify('@Newtonsoft.Json.JsonConvert.SerializeObject(m)');"><i class="fa fa-edit"></i> 调课</a>
                                                    </li>
                                                    <li>
                                                        <a href="javascript:" class="" type="button" onclick="javascript: StopClass('@m.ClassID','@m.ClassIndex');"><i class="fa fa-edit"></i> 停课</a>
                                                    </li>
                                                </ul>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            }
                            else
                            {
                                @*<tr><td colspan="7" style="text-align:center; color:red;">未查询到数据,请更换查询条件试试!</td></tr>*@
                            }
                        </tbody>
                        @*<tfoot>
                                <tr>
                                    <th>渲染引擎</th>
                                    <th>浏览器</th>
                                    <th>平台</th>
                                    <th>引擎版本</th>
                                    <th>CSS等级</th>
                                </tr>
                            </tfoot>*@
                    </table>
                    @if (Model != null && Model.buttonlist.TotalPageCount > 0)
                    {
                        <div class="row">
                            <div class="dataTables_info col-sm-6">每页显示 @Model.search.PageSize 条，共<span>@Model.buttonlist.TotalItemCount</span>条数据</div>
                            <div class="col-sm-6">

                                @Html.Pager(Model.buttonlist, new PagerOptions(), "", new RouteValueDictionary {
                                   { "pageindex",  Model.search.CurrentPage },
                                   { "pagesize", ViewBag.PageSize },
                                   {"className",Model.search.className},
                                   {"timeStart",Model.search.timeStart},
                                   {"timeEnd",Model.search.timeEnd},
                                   {"ComCode",Model.search.ComCode}
                               }, null)
                            </div>

                        </div>
                    }
                </div>
            </div>
        </div>

    </div>
</div>
<script type="text/javascript">

    //判断页面是否有回车操作
    window.document.onkeydown = function (e) {
        e = e || window.event;
        if (e.keyCode == 13 || e.keyCode == 108) {
            document.getElementById('frmQuery').submit();
        }
    }
   
    //执行查询 或者刷新
    function fresh() {
        document.getElementById('frmQuery').submit();
    }

    //点击列表的调课,调课操作
    function modify(id) {
        var data = JSON.parse(id);
        cleanData("buttoninfo");
        layer.open({
            type: 1,
            title: "<h3>调课</h3>",
            area: ['680px', '420px'],
            content: $('#buttoninfo'),
            btn: ['保存', '取消'],
            yes: function (index) {
                var loadindex = layer.load();
                saveModifyClassList(data, loadindex);
            },
            cancel: function (index) {
                layer.close(index);
              
            }, success: function (layero, index) {
                //传入参数，并赋值给iframe的元素 
                $("#modiy_className").html ( data.ClassName);
                $("#modify_date").val(data.ClassDate.substring(0,10));
            }
        });
        if (id) {//提供存着ID就是修改，则加载数据，不然打开空页面
            var loadindex = layer.load();
            // loaddetail(id, loadindex)
            loadModifyOptions(data, loadindex);
        }

        //配置下拉控件chosen
        $(".chosen-selects").chosen({
            no_results_text: "未找到此选项!",
            search_contains: true,
            width: '100%'
        });

        
        //激活日期控件
        $('.DateS').datepicker({
            keyboardNavigation: false,
            forceParse: false,
            autoclose: true
        });
    }

   //保存 编辑的班级信息 
    function saveModifyClassList(data, loadIndex) {
        var jsonModify = new Object();
        jsonModify.ClassID=data.ClassID;
        jsonModify.ClassIndex=data.ClassIndex;
        jsonModify.ClassDate = $("#modify_date").val();
        jsonModify.TeacherID = $("#modify_teachers").val();
        jsonModify.Teacher2ID = $("#modify_teachers2").val();
        jsonModify.TimePeriod = $("#modify_period").val();
        jsonModify.RoomID = $("#modify_room").val();
        if (!jsonModify.RoomID) {
            layer.msg("请选择教室")
            layer.close(loadIndex);//关闭加载层
            return;
        }
        if (!jsonModify.ClassDate) {
            layer.msg("请选择上课日期")
            layer.close(loadIndex);//关闭加载层
            return;
        }
        if (!jsonModify.TimePeriod) {
            layer.msg("请选择上课时段")
            layer.close(loadIndex);//关闭加载层
            return;
        }
       
        if (!jsonModify.TeacherID) {
            layer.msg("请选择当前讲师")
            layer.close(loadIndex);//关闭加载层
            return;
        }
        if (!jsonModify.Teacher2ID) {
            layer.msg("请选择当前讲师2")
            layer.close(loadIndex);//关闭加载层
            return;
        }
      
        var action = '@Url.Action("saveModifyClass", "Attendance")';
        $.post(action, {
            "data": JSON.stringify(jsonModify)//序列化对象
        }, function (json) {
            layer.close(loadIndex);
            if (json.status == 200) {//成功

                layer.msg(json.msg);//弹出服务器返回的消息
                setTimeout(function () {//操作
                    layer.closeAll();//关闭所有层
                    window.location.reload(); //刷新
                }, 3000);
            }
        }, 'json');

    }
    //加载编辑相关选项
    function loadModifyOptions(data, loadIndex) {
        $.ajax({
            url: '@Url.Action("getModifyClassOptions", "Attendance")',
            type: "post",
            success: function (json) {
                if (json.status == 200) {//成功
                    $("#modify_room").empty();
                    $("#modify_period").empty();
                    $("#modify_teachers").empty();
                    $("#modify_teachers2").empty();
                    var option_room = "<option value=''>请选择</option>";
                    var option_period = "<option value=''>请选择</option>";
                    var option_teachers = "<option value=''>请选择</option>";
                    var option_teachers2 = "<option value=''>请选择</option>";
                  
                    $.each(json.data[0], function (index, value) {
                        option_room += "<option value='" + value.id + "'>" + value.name + "</option>";
                    });
                    $.each(json.data[1], function (index, value) {
                        option_period += "<option value='" + value.id + "'>" + value.name + "</option>";
                    });
                    $.each(json.data[2], function (index, value) {
                        option_teachers += "<option value='" + value.ID + "'>" + value.name + "</option>";
                    });
                    $.each(json.data[2], function (index, value) {
                        option_teachers2 += "<option value='" + value.ID + "'>" + value.name + "</option>";
                    });
                    $("#modify_room").append(option_room)
                    $("#modify_period").append(option_period)
                    $("#modify_teachers").append(option_teachers)
                    $("#modify_teachers2").append(option_teachers2)
                    $("#modify_room").val(data.RoomID)
                    $("#modify_period").val(data.TimePeriod)
                    $("#modify_teachers").val(data.TeacherID)
                    $("#modify_teachers2").val(data.Teacher2ID)
                    $(".chosen-selects").trigger("chosen:updated");//刷新chosen控件
                }
                layer.close(loadIndex);//关闭加载层
            },
            error: function (xmLHttpRequest, textStatus, errorThrown) {
                layer.close(loadindex);
                layer.msg("系统异常，请重试<br/>错误信息：" + xmLHttpRequest.responseText);
            }
        });
    }
    // 发布作业
    function publishJob(id, Classid, Classindex) { 
        cleanData("job");//清空数据
        $("#Classid").val(Classid) 
        $("#Classindex").val(Classindex)
        layer.open({
            type: 1,
            title: "<h3>发布作业</h3>",
            area: ['680px', '400px'],
            content: $('#job'),
            btn: ['保存', '取消'],
            yes: function () {

            },
            cancel: function (index) {
                layer.close(index);
            }
        });
        ClassListJob();
        $("#file-1").fileinput({
            uploadUrl: '#', // you must set a valid URL here else you will get an error
            allowedFileExtensions: ['jpg', 'png', 'gif'],//接收的文件后缀
            //overwriteInitial: false,
            maxFileSize: 1000,
            maxFilesNum: 10,
            allowedFileTypes: ['image'],
            msgFilesTooMany: "选择上传的文件数量({n}) 超过允许的最大数值{m}！",
            slugCallback: function (filename) {
                return filename.replace('(', '_').replace(']', '_');
            }
        });
    }

    //评价
    function appraise(data) {
        var obj = JSON.parse(data);
      
        cleanData("appraise");//清空数据
        layer.open({
            type: 1,
            title: "<h3>评价学生</h3>",
            area: ['780px', '400px'],
            content: $('#appraise'),
            btn: ['保存', '取消'],
            yes: function () {
                var loadindex = layer.load();
                saveStudentEvaluate(data, loadindex);
            },
            cancel: function (index) {
                layer.close(index);
            }
        });
        if (data) {
            var loadindex = layer.load();
            loadAttendancedetail(obj, loadindex)
        }
    }
    //保存评价数据
    function saveStudentEvaluate(data, loadindex) {
        var ids = $(".evalId");
        var values = $(".evalValue");
        var length = ids.length;
        var json = '';
        for(var i=0;i<length;i++){
            json += "{ 'ID':" + ids[i].innerText + ",'Evaluate' :'" + values[i].value + "'}";
            if (i < length - 1) {
                json += ",";
            }
        }
        json = "[" + json + "]";
        var action='@Url.Action("saveStudentEvaluate", "Attendance")';
        $.post(action, {
            "data": json//序列化对象
        }, function (json) {
            layer.close(loadindex);
            if (json.status == 200) {//成功

                layer.msg(json.msg);//弹出服务器返回的消息
                setTimeout(function () {//操作
                    layer.closeAll();//关闭所有层
                    window.location.reload(); //刷新
                }, 3000);
            }
        }, 'json');
      
    }
    //加载评价列表数据
    function loadAttendancedetail(obj, loadindex) {
        var _data = JSON.stringify(obj);
        $.post('@Url.Action("StudentEvaluate", "Attendance")',{
            "data": _data},//序列化对象
            function (json) {
                if (json.status == 200) {//成功
                    var row = "";
                    $.each(json.data, function (index, value) {
                        var evalute = value.Evaluate;
                        if (!evalute) {
                            evalute = '';
                        }
                        row += "<tr><td>" + value.Name + "</td><td hidden class='evalId'>" + value.ID + "</td><td>" + value.Phone + "</td><td> <input type='text' placeholder='学生评价' class='form-control input-sm evalValue' " +
                            " value= '" + evalute
                            + "'></td></tr>"

                    })
                    row = "<tbody>" + row + "</tbody>";
                    $('#studentEvalute > tbody').remove()
                    $('#studentEvalute').append(row);
                }
                layer.close(loadindex);//关闭加载层
            }
        ).error(function () {
            layer.close(loadindex);//关闭加载层
        });
    }

    //考勤 appraise
    function attendance(data) {
        var obj = JSON.parse(data);
        cleanData("follow");//清空数据
        layer.open({
            type: 1,
            title: "<h3 class=''>考勤管理</h3>",
            area: ['780px', '530px'],
            content: $('#follow'),
            btn: ['保存', '取消'],
            yes: function () {
                var loadindex = layer.load();
                onSaveKaoqin(obj,loadindex)
            },
            cancel: function (index) {
                layer.close(index);
            },
            success: function (layero, index) {
                $("#kaoqin_title > tbody").remove();
               
                var tbody = '<tbody><tr><td>' + "班级：" + obj.ClassName + "，课时：" + obj.TotalLesson
                    +'</td></tr><tr><td>'
                    +'上课时间:'+obj.ClassDate.substring(0, 10)+' '+obj.TimePeriodValue+' 应到:<font color="#000000">'+obj.SumStudents
                    +'</font>  已到:<font color="#0033CC	">'+obj.CheckINStudents+'</font>  未到:<font color="#FF0000">'+obj.UnCheckStudents
                    + '</font></td></tr></tbody>';
                $("#kaoqin_title").append(tbody);
                //传入参数，并赋值给iframe的元素 
                var name="班级："+obj.ClassName+"，课时："+obj.TotalLesson;
                $("#ClassName").text(name);
                //考勤点名-选择所有学生
                $("#btn_all_student").on("ifChecked", function (event) {
                    var check = $("#btn_all_student").is(":checked");
                    if (check) {
                        $("[name = chkItem]:checkbox").each(function () {
                            $(this).iCheck("check");
                            onKaoqinCheckBoxChange($(this));
                        });
                    }
                });
               
            }  
        });
        if (obj) {
            var loadindex = layer.load();
            loadCheckData(obj, loadindex)
        }
    }

    function onSaveKaoqin(obj, loadIndex) {
        var data = [];
        var hidden = $("[name = hidden_ID]");
        var checkIn = $("[name = chkItem]");
        var ClockTime_is = $("[name = ClockTime]"); 
 
        var checkOutOption = $("[name = class-time]");
        var judge=0;

        ClockTime_is.each(function (index, value) {
            var disabled = $(checkIn[index]).attr("disabled")
            var checked = $(checkIn[index]).is(":checked")
            if (!disabled) {
                if (checked) { 
                    if (value.innerText) {
                        judge = 1;
                    }
                }

            }

        });

        if (judge == 1) {
            layer.msg("已经填写考勤，请勿重复填写！");
            return false;
        }
         
    
        hidden.each(function (index, value) {
            var id = value.innerText;
            var checked = $(checkIn[index]).is(":checked")
            var disabled=$(checkIn[index]).attr("disabled")
            if (!disabled) {              
                var options = $(checkOutOption[index]).val();
                var tmp = new Object();
                tmp.StudentID = id;
                tmp.ClassID = obj.ClassID;
                tmp.ClassIndex = obj.ClassIndex;
                tmp.ClockTime = checked ? new Date().Format("yyyy-MM-dd HH:mm:ss") : "";
                tmp.AttendanceTypeID = checked ? "2" : options;//勾选正常，则AttendanceTypeID = 2，不然就读缺勤原因
                if (!tmp.AttendanceTypeID)
                {
                    tmp.AttendanceTypeID = 1;//如果未勾选正常，切未填写原因默认就是未考勤
                }
                data[index] = tmp;
             

            }
        });
        
 

        $.post('@Url.Action("saveStudentAttendance", "Attendance")', { "data":JSON.stringify(data)}, function (json) {
            if (json.status == 200) {//成功
                layer.msg(json.msg);//弹出服务器返回的消息
                setTimeout(function () {//操作
                    layer.closeAll();//关闭所有层
                    window.location.reload(); //刷新
                }, 3000);
            }
            layer.close(loadIndex);//关闭加载层
        }).error(function () {
            layer.close(loadIndex);//关闭加载层
        });
    }
   
    //点击出勤checkbox
    function onKaoqinCheckBoxChange(uiObject) {
        var t1 = uiObject.is(":checked");
        var t2 = uiObject.parent().parent();
        var t3 = t2.find("select");
        var v3 = t3.val();
        var notSelect = (v3 == "");//1 :未考勤
        if (t1 & notSelect) {
            uiObject.iCheck("check");
            
        } else { 
            uiObject.iCheck("uncheck");
        }
    }

    //选择考勤原因触发事件
    function onKaoqinOptionChange() {
        $("[name = class-time]").each(function () {
            var selectOption = $(this).val();
            if (selectOption != "") {//1 :未考勤
                var t2 = $(this).parent().parent();
                var t3 = t2.find("input");
                t3.iCheck("uncheck");
                 
            }
         
        });
       
    }

    function ChangeDateFormat(jsondate) {
        if (!jsondate) {
            return "";
        }
        jsondate = jsondate.replace("/Date(", "").replace(")/", "");
        if (jsondate.indexOf("+") > 0) {
            jsondate = jsondate.substring(0, jsondate.indexOf("+"));
        }
        else if (jsondate.indexOf("-") > 0) {
            jsondate = jsondate.substring(0, jsondate.indexOf("-"));
        }

        var date = new Date(parseInt(jsondate, 10));
        var month = date.getMonth() + 1 < 10 ? "0" + (date.getMonth() + 1) : date.getMonth() + 1;
        var currentDate = date.getDate() < 10 ? "0" + date.getDate() : date.getDate();
        return date.getFullYear() + "-" + month + "-" + currentDate;
    }

    function loadCheckData(obj, loadindex) {
        $.post('@Url.Action("getCheckStudentData", "Attendance")', { "data": JSON.stringify(obj) }, function (json) {
        
            $("#kaoqin_student > tbody").empty();

            if (json.status == 200) { // 成功

               

                var tbody = "<tbody>";
                $.each(json.data[0], function (index, value) {
                    
                    var isCheckAttendance = value.AttendanceTypeID > 1;//判断当前状态是否已考勤
                    var ischeck = (value.AttendanceTypeID == 2); //&& 当前考勤是否正常

                    var option = '<option value="">请选择缺勤原因</option>';

                    $.each(json.data[1], function (index, valueOption) {
                        if (valueOption.id == value.AttendanceTypeID) {
                            option += "<option value='" + valueOption.id + "' selected = 'selected'>" + valueOption.name + "</option>";
                        }else
                            option += "<option value='" + valueOption.id + "'>" + valueOption.name + "</option>";
                    });
                    //style="display:none"
                    //checked="checked"
                    //var options = option.replace("value=''", '');
                    tbody += "<tr>"
                        + "<td>" + (index +1) + "</td>"
                        + '<td hidden name="hidden_ID">' + value.StudentID + '</td>'
                        + "<td>" + value.Name + "</td>"
                        + "<td>" + value.Phone + "</td>"
                        + '<td>出勤 <input type="checkbox" class="checkbox i-checks"  name="chkItem"' +
                            (ischeck ? 'checked="checked"' : '')
                            + (isCheckAttendance ? 'disabled="true"' : '')
                        + ' ></td>'
                        + '<td>剩余' + value.LeftHour + '</td>'
                       
                    
                        + '<td name="ClockTime">' + ChangeDateFormat(value.ClockTime)
                        + '</td>'
                        + '<td><select class="selectpicker  form-control" name="class-time" data-live-search="true"' 
                        +(isCheckAttendance ? 'disabled="true"' : '')
                        +'onchange="javascript:onKaoqinOptionChange();">'
                        + option
                        + "</select></td>"
                    + "</tr>";
                });
                tbody += "</tbody>";
                $("#kaoqin_student").append(tbody);
                
                }
            layer.close(loadindex);//关闭加载层

        }).error(function () {
            layer.close(loadindex);//关闭加载层
        }).complete(function () {
            $("[name = chkItem]:checkbox").each(function () {
                $(this).change(function () {
                    var check = $(this).is(":checked");
                    if (check) {
                        onKaoqinCheckBoxChange($(this));
                    }
                })
            });
        });
    }

    
 


    //激活日期控件
    $('.input-group.date').datepicker({
        todayBtn: "linked",
        keyboardNavigation: false,
        forceParse: false,
        calendarWeeks: true,
        autoclose: true
    });




    function SAVA() {

        var cls = new Object;
        cls.JobTitle = $("#JobTitle").val();
        cls.JobContent = $("#JobContent").val();

        if (!cls.JobTitle) {
            layer.msg("作业标题不能为空！");
            return false;
        }
        if (!cls.JobContent) {
            layer.msg("作业内容不能为空！");
            return false;
        }
 
        cls.Classid = $("#Classid").val();
        cls.Classindex = $("#Classindex").val();


        var action = '@Url.Action("savClassList", "Attendance")'
        $.post(action, {
            "data": JSON.stringify(cls)//序列化对象
        }, function (json) {
            if (json.status == 200) {//成功

                ClassListJob();
                // $("#img").attr("src", json.data.thumbnailImage);
                $("#Picurl").val(json.data.filename);//弹出服务器返回的消息
                layer.msg(json.msg);//弹出服务器返回的消息 
            }
        }, 'json');



    }





    function OpenUploadWindow() {
        $("#uploadFile").click().change(
            function () {
                var file = document.getElementById("uploadFile").value;
                $("#Picurl").val(file);
                document.getElementById("Picurl").value = file;
            }
            );

    }



    //上传文件
    function UploadPic() {
        //var extensionName = /.JPG|.JPEG|.jpg|.png|.gif|.jpeg/;
        var file = $("#uploadFile")[0].files[0];

        if (!file) {
            layer.msg("未找到相关文件！");
            return false;
        }

        //如果文件大于5M
        if (file.size > 1048576 * 5) {
            layer.msg("您上传的文件太大了，最多允许5MB，请重新选择文件！");
            return false;
        }

        //if (extensionName.test(file.name)) {
            if (window.FileReader) {
                var reader = new FileReader();
                reader.onload = function (evt) {
                    if (evt.target.readyState === FileReader.DONE) {
                        var offset = evt.target.result.indexOf(";base64,");
                        var fileTemp = null;
                        if (offset > 0) {
                            //前八个字节是数据流的头所以要去除。
                            fileTemp = evt.target.result.substr(offset + 8);
                        }
                        //取得文件的扩展名
                        var fileExt = file.name.replace(/.+\./, "");
                        //将分离出来的二进制文件流放到参数里



                        var obj = new Object;
                        obj.fileTemp = fileTemp;
                        obj.fileExt = fileExt;
                         
                        obj.Classid = $("#Classid").val();
                        obj.Classindex = $("#Classindex").val();
                        var action = '@Url.Action("Upload", "Attendance")'
                        $.post(action, {
                            "data": JSON.stringify(obj) //序列化对象
                        }, function (json) {
                            if (json.status == 200) {//成功

                                ClassListJob();
                               // $("#img").attr("src", json.data.thumbnailImage);
                                $("#Picurl").val(json.data.filename);//弹出服务器返回的消息
                                layer.msg(json.msg);//弹出服务器返回的消息 
                            }
                        }, 'json');



                    }
                }
        
                reader.onerror = function () {
                    layer.msg("文件读取时发生错误！");
                    return false;
                }
                reader.readAsDataURL(file);    // 将文件读取成一段以 data:开头的字符串
            }
        //}
        //else {
        //    layer.msg("只支持jpg,png,gif,jpeg类型的文件上传，请重新选择文件！");
        //    return false;
        //}



    }
    //加载下载路径
    function ClassListJob() {
        var loadindex = layer.load();
        var cls = new Object;
        cls.Classid = $("#Classid").val();
        cls.Classindex = $("#Classindex").val();
        var _data = JSON.stringify(cls);
        $.post('@Url.Action("ClassListJob", "Attendance")', {
            "data": _data
        },//序列化对象
            function (json) {
                if (json.status == 200 && json.data.length > 0) {//成功,且有上传资料
                    var row = "";
                    $.each(json.data, function (index, value) {
                        var evalute = value.Evaluate;
                        if (!evalute) {
                            evalute = '';
                        } 
                        if (value.ID != 0) { 
                            row += "<tr><td>" + ChangeDateFormat(value.CreateTime) + "</td><td  >" + value.JobTitle + "</td><td>" + value.JobContent + "</td>  <td> <a  target='blank' href='" + value.FileRoute + "'><i class='fa fa-edit'></i> 下载</a>     <a href='javascript:DELETE(" + value.ID + ");' class='' type='button'><i class='fa fa-edit'></i> 删除</a> </td>   </tr>"
                        }
                        else {
                            row += "<tr><td> </td><td  > </td><td> </td>   <td>  </td>   </tr>"
                        }


                    })
                    row = "<tbody>" + row + "</tbody>";
                    $('#ClassListJob > tbody').remove()
                    $('#ClassListJob').append(row);
                    $("#JobTitle").val(json.data[0].JobTitle);
                    $("#JobContent").val(json.data[0].JobContent);
                }

                layer.close(loadindex);//关闭加载层
            }
        ).error(function () {
            layer.close(loadindex);//关闭加载层
        });
    }
     

    //点击列表的编辑按钮，编辑操作
    function DELETE(id) {
        if (confirm("你确定要删除？")) {

             
             var   action = '@Url.Action("DELETE", "Attendance")'; 
              $.post(action, {
                  "ID": id
              }, function (json) {
                  if (json.status == 200) {//成功 
                      layer.msg(json.msg);//弹出服务器返回的消息
                      setTimeout(function () {//操作 
                          window.location.reload(); //刷新
                      }, 3000);
                  }
              }, 'json');
        }
    }
    //点击停课按钮，当前课时转到末尾处
    function StopClass(classid,classindex){
        layer.confirm('停课后本周课时自动顺延，确认要进行停课么?', { icon: 3, title: '提示' }, function (index) {
                   

            layer.close(index);//关闭当前回话层
            $.post('@Url.Action("StopClass", "Attendance")', {
                classid: classid,
                classindex: classindex
            },
            function (json) {
                setTimeout(function () {
                    window.location.reload(); //刷新
                }, 3000);

                layer.closeAll();
                layer.msg(json.msg);
            }, 'json').error(function () {
                layer.closeAll();
                layer.msg("系统错误，请联系管理员");
                
            });
        });
    }
</script>
@*弹出层，调课*@
<div class="ibox float-e-margins" id="buttoninfo" style="display:none">
   
    <div class="ibox-content">
        <form class="form-horizontal">
            <div class="form-group">
                <label class="col-sm-3 control-label">课程名称:</label>
                <div class="col-sm-8">
                    <label   class="form-control" id="modiy_className">绘画</label>
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-3 control-label">教室名称：</label>
                <div class="col-sm-8">
                    <select data-placeholder="选择教室..." class=" form-control input-sm" style="width:100%;height:100%;" id="modify_room">
                      
                    </select>
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-3 control-label">上课日期：</label>
                <div class="col-sm-8">
                    <div class="DateS input-group date">
                        <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                        <input type="text" class="form-control input-sm" value="2014-11-11" id="modify_date">
                    </div>
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-3 control-label">上课时段：</label>
                <div class="col-sm-8">
                    <select class=" form-control input-sm" style="width:100%;height:100%;" id="modify_period"></select>
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-3 control-label">当前讲师：</label>
                <div class="col-sm-8">
                    <select data-placeholder="选择教师..." class=" form-control input-sm chosen-selects" style="width:100%;height:100%;" id="modify_teachers"></select>
                </div>
            </div>

               <div class="form-group">
                <label class="col-sm-3 control-label">当前讲师2：</label>
                <div class="col-sm-8">
                    <select data-placeholder="选择教师..." class=" form-control input-sm chosen-selects" style="width:100%;height:100%;" id="modify_teachers2"></select>
                </div>
            </div>
 

            @*<div class="form-group">
                <label class="col-sm-3 control-label">是否停用：</label>
                <div class="checkbox i-checks col-sm-8">
                    <label>
                        <input type="checkbox" value="" id="BTN_IsSuspended"> <i></i> 停用
                    </label>
                </div>
            </div>*@

        </form>
    </div>
</div>

@*弹出层，考勤管理*@
<div class="ibox float-e-margins" id="follow" style="display:none">
    <div class="ibox-content">
        <form class="form-horizontal">
            <table class="table table-striped table-bordered" id="kaoqin_title" >
              
                
                </table>
           
                <div class="pre-scrollable">
                    <table class="table table-striped table-bordered table-hover dataTables-example" id="kaoqin_student">
                        <thead>
                         <tr>
                                <th>序号</th>
                                <th>学员姓名</th>
                                <th>学员电话</th>
                                <th>出勤 <input type="checkbox" class="checkbox i-checks" value="" id="btn_all_student" ></th>
                                <th>剩余课时</th>
                                <th>考勤时间</th>
                                <th>缺勤原因</th>
                              
                            </tr>
                        </thead>
                     @*   <tbody>
                        <tr>
                            <td>王遗风</td>
                            <td>13812345678</td>
                            <th>出勤 <input type="checkbox" class="checkbox i-checks" name="chkItem" value="" ></th>
                            <td>剩余2 </td>
                            <td>
                                <select class="selectpicker  form-control" id="class-time" data-live-search="true">
                                    <option selected value="">请选择缺勤原因</option>
                                    <option value="1">其他课程的课</option>
                                    <option value="2">迟到</option>
                                    <option value="3">请假</option>
                                    <option value="4">事假</option>
                                    <option value="5">旷课</option>
                                </select>
                            </td>
                        </tr>   
                            <tr>
                                <td>王二小</td>
                                <td>15812445678</td>
                                <th>出勤 <input type="checkbox" class="checkbox i-checks" name="chkItem" value="" ></th>
                                <td>剩余20.0</td>
                                <td>
                                    <select class="selectpicker  form-control" id="class-time" data-live-search="true">
                                        <option selected value="">请选择缺勤原因</option>
                                        <option value="1">其他课程的课</option>
                                        <option value="2">迟到</option>
                                        <option value="3">请假</option>
                                        <option value="4">事假</option>
                                        <option value="5">旷课</option>
                                    </select>
                                </td>
                            </tr>   
                            <tr>
                                <td>小二蛋</td>
                                <td>15557445678</td>
                                <th>出勤 <input type="checkbox" class="checkbox i-checks" name="chkItem" value="" ></th>
                                <td>剩余20</td>
                                <td>
                                    <select class="selectpicker  form-control" id="class-time" data-live-search="true">
                                        <option selected value="">请选择缺勤原因</option>
                                        <option value="1">其他课程的课</option>
                                        <option value="2">迟到</option>
                                        <option value="3">请假</option>
                                        <option value="4">事假</option>
                                        <option value="5">旷课</option>
                                    </select>
                                </td>
                            </tr>   
                        </tbody>*@
                    </table>
                </div>

       </form>
   </div>
</div>

@*弹出层，评价*@

<div class="ibox float-e-margins" id="appraise" style="display:none">
    <div class="ibox-content">
        <form class="form-horizontal">

            <div class="">
                <table class="table table-striped table-bordered table-hover dataTables-example" id="studentEvalute">
                    <thead>
                        <tr>
                            <th>学员姓名</th>
                            <th>学员电话</th>
                            <th>评价</th>
                        </tr>
                    </thead>
                  
                </table>
            </div>



        </form>
    </div>
</div>

@*弹出层，发布作业*@
<div class="ibox float-e-margins" id="job" style="display:none">
    <div class="ibox-content">
        <form class="form-horizontal">
         
            <div class="form-group">
                <label class="col-sm-3 control-label">作业名称：</label>
                <div class="col-sm-8">
                    <input type="text" placeholder="作业标题" class="form-control" id="JobTitle">
                  <input type="text" placeholder="班级ID" style="display:none" id="Classid">
                 <input type="text" placeholder="行号" style="display:none" id="Classindex">  
                </div>
            </div>
           

            <div class="form-group">
                <label class="col-sm-3 control-label">作业内容：</label>
                <div class="col-sm-8">
                    <textarea placeholder="作业内容" class="form-control" rows="3"  id="JobContent"></textarea>
                
                 <button type="button"  class=" btn btn-primary" onclick="SAVA()">&nbsp&nbsp保&nbsp&nbsp存&nbsp&nbsp</button>

                </div>
            </div>



            <div class="form-group">
                <label class="col-sm-3 control-label">文件上传：</label>
                <div class="col-sm-8">
                @*    <input class="form-control" type="text" id="Picurl" />
                    <input type="file" id="uploadFile" />
                    <button type="button" class=" btn btn-primary" onclick="UploadPic()">&nbsp&nbsp上&nbsp&nbsp传&nbsp&nbsp</button>*@


                         <input class="form-control" type="text" id ="Picurl"   />
                  <button type="button" class="btn btn-w-m btn-primary " onclick="OpenUploadWindow()">选择文件</button>
                  <button onclick="UploadPic()" class="btn btn-primary" type="button">上传</button>
             
                     <input id="uploadFile" type="file" class="hidden"   />

                </div>
            </div>

            <div class="form-group">
                <label class="col-sm-12">上传记录：</label>
                <div class="col-sm-12">
                    <table class="table table-striped table-bordered dataTables-example" id="ClassListJob">
                        <thead>
                            <tr>
                                <th>上传日期</th>
                                <th>作业名称</th>
                                <th>作业内容</th>
                                <th>操作</th>
                            </tr>
                        </thead>
                        <!-- 循环数据 -->
  @*                      <tbody>
                            <!-- 测试数据 -->
                            <tr>
                                <td>2017-06-23</td>
                                <td>123.jpg</td>
                                <td>jpg</td>
                                <td><a href="javascript:" class="btn btn-primary btn-xs" type="button" onclick=""><i class="fa fa-edit"></i> 下载</a></td>
                            </tr>
                            <tr>
                                <td>2017-06-23</td>
                                <td>123.jpg</td>
                                <td>jpg</td>
                                <td><a href="javascript:" class="btn btn-primary btn-xs" type="button" onclick=""><i class="fa fa-edit"></i> 下载</a></td>
                                <td><a  target="_blank" href="/Upload/AttendanceList/201707201530541035.doc"><i class="fa fa-edit"></i> 下载</a></td>
                            </tr>
                        </tbody>*@
                    </table>
                </div>
            </div>
        </form>

    </div>
</div>
